name: Unit Testing with Sharded Coverage

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  run-coverage-shards:
    name: Run Coverage for Shards
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shard: [shard1t, shard2t, shard3t]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node v20
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: "yarn"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Compile contracts
        run: yarn compile

      - name: Run Coverage for ${{ matrix.shard }}
        run: yarn test:coverage:solidity

      - name: Debug Coverage Output
        run: |
          echo "Listing contents of coverage/ directory:"
          ls -R coverage/

      - name: Upload Coverage for ${{ matrix.shard }}
        uses: actions/upload-artifact@v3
        with:
          name: coverage-${{ matrix.shard }}
          path: coverage/coverage-final.json

  combine-coverage:
    name: Combine Coverage Reports
    runs-on: ubuntu-latest
    needs: run-coverage-shards
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download All Coverage Artifacts
        uses: actions/download-artifact@v3
        with:
          name: coverage-*
          path: coverage-shards/

      - name: Debug Downloaded Files
        run: |
          echo "Listing all files in coverage-shards/ directory:"
          ls -R coverage-shards/

      - name: Merge Coverage Reports
        run: |
          yarn add nyc
          mkdir -p coverage
          nyc merge coverage-shards/ coverage/coverage-final.json

      - name: Debug Final Merged Coverage Report
        run: |
          echo "Contents of merged coverage-final.json:"
          cat coverage/coverage-final.json

      - name: Generate Final Coverage Report
        run: |
          nyc report --reporter=html --reporter=text --reporter=lcov

      - name: Upload Unified Coverage Report to Codecov
        uses: codecov/codecov-action@v4
        with:
          directory: coverage/
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
